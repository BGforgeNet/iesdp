---
title: "BG(2):EE 2DA Files : concentr.2da"
---
    <div class="title_main"> concentr.2da</div>
<br />
The way that spellcasters fail after taking damage has been externalized to this file.<br />
<br />
In BG2EE we have:<br /><br />
<pre>
2DA V1.0
0
BEHAVIOR             VALUE
CHECK_MODE           0
</pre>
<br />

Known values for <code>CHECK_MODE</code> are:
<ul>
  <li>
    0 &longrightarrow; Any damage a spellcaster takes will cause them to fail their spellcasting.
    <ul>
      <li>
        To be precise, spellcasters can't be disrupted by damage if they are facing <code><a href="../../ids/bgee/dir.htm#SSW">SSW</a></code>, <code><a href="../../ids/bgee/dir.htm#SWW">SWW</a></code>, <code><a href="../../ids/bgee/dir.htm#NWW">NWW</a></code>, <code><a href="../../ids/bgee/dir.htm#NNW">NNW</a></code>, <code><a href="../../ids/bgee/dir.htm#NNE">NNE</a></code>, <code><a href="../../ids/bgee/dir.htm#NEE">NEE</a></code>, <code><a href="../../ids/bgee/dir.htm#SEE">SEE</a></code>, or <code><a href="../../ids/bgee/dir.htm#SSE">SSE</a></code>.
        <ul>
          <li>
            This happens because the disruption code is only checked if the caster is in the correct orientation to face the target. <code><a href="../../ids/bgee/seq.htm#SEQ_DAMAGE">SEQ_DAMAGE</a></code> rounds a creature's orientation down to the nearest <i>even</i> direction, causing the caster to momentarily <b><u>not</u></b> face the target, making the check fail. Here's an example:

            <details>
              <video width="960" height="600" controls autoplay loop> <!-- 16:10 aspect ratio -->
                <source src="../../../images/spell disruption.mp4" type="video/mp4" />
                Your browser does not support the video tag.
              </video>
            </details>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>1 &longrightarrow; Spell disrupted if <code>(1d20 - 1) + Luck > <a href="../../../file_formats/ie_formats/spl_v1.htm#splv1_Header_0x34">Spell Level</a> + Damage Taken</code></li>
  <li>2 &longrightarrow; Spell disrupted if <code>(1d20 - 1) + (Constitution / 2) - 5 > <a href="../../../file_formats/ie_formats/spl_v1.htm#splv1_Header_0x34">Spell Level</a> + 15</code></li>
  <li>3 &longrightarrow; Spell disrupted if <code>(1d20 - 1) + Luck > <a href="../../../file_formats/ie_formats/spl_v1.htm#splv1_Header_0x34">Spell Level</a> + 15</code></li>
  <li>4 &longrightarrow; Spell disrupted if <code>(1d20 - 1) + (Constitution / 2) - 5 > <a href="../../../file_formats/ie_formats/spl_v1.htm#splv1_Header_0x34">Spell Level</a> + Damage Taken</code></li>
  <li>(After this it should repeat based on whether <code>BIT0</code> and <code>BIT1</code> are set)</li>
</ul>

{% capture note %}
<code>CHECK_MODE</code> values greater than or equal to <code>1</code> are bugged (since all those inequality symbols should be <code><</code> instead of <code>></code>).<br />
As a result, you might want to stick with the default behavior (<code>CHECK_MODE=0</code>) until this bug is fixed.
{% endcapture %}

{% include bug.html %}

{% capture note %}
<ul>
  <li>Constitution and Luck use their aggregate/current scores, not necessarily the base values.</li>
  <li>
    Unlike other dice affected by Luck, this one does not cap it at its normal min/max values.
    <ul>
      <li>&plus;/&minus;50 Luck is &plus;/&minus;50 to the roll.</li>
    </ul>
  </li>
</ul>
{% endcapture %}

{% include note.html %}